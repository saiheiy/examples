// automatically generated by the FlatBuffers compiler, do not modify

package Examples;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class Security extends Table {
  public static Security getRootAsSecurity(ByteBuffer _bb) { return getRootAsSecurity(_bb, new Security()); }
  public static Security getRootAsSecurity(ByteBuffer _bb, Security obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public Security __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Cusip cusip() { return cusip(new Cusip()); }
  public Cusip cusip(Cusip obj) { int o = __offset(4); return o != 0 ? obj.__assign(o + bb_pos, bb) : null; }
  public String type() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer typeAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public boolean otc() { int o = __offset(8); return o != 0 ? 0!=bb.get(o + bb_pos) : false; }

  public static void startSecurity(FlatBufferBuilder builder) { builder.startObject(3); }
  public static void addCusip(FlatBufferBuilder builder, int cusipOffset) { builder.addStruct(0, cusipOffset, 0); }
  public static void addType(FlatBufferBuilder builder, int typeOffset) { builder.addOffset(1, typeOffset, 0); }
  public static void addOtc(FlatBufferBuilder builder, boolean otc) { builder.addBoolean(2, otc, false); }
  public static int endSecurity(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

